module Explorer.Types where

import Explorer.I18n.Lang (Language)
import Explorer.Routes (Route)
import Prelude (class Eq, class Ord)

-- TODO (jk) Will be generated by purescript-bridge later on
data CCurrency =
      ADA
    | BTC
    | USD


-- State

type State =
    { lang :: Language
    , route :: Route
    , viewStates :: ViewStates
    }

type ViewStates =
    { dashboard :: DashBoardViewState
    }

type DashBoardViewState =
    { blocksExpanded :: Boolean
    , transactionsExpanded :: Boolean
    , selectedApiCode :: DashboardAPICode
    }

data DashboardAPICode = Curl | Node | JQuery

derive instance eqDashboardAPICode :: Eq DashboardAPICode
derive instance ordDashboardAPICode :: Ord DashboardAPICode

-- Actions

data Action
    = SetLanguage Language
    | UpdateView Route
    | ScrollTop
    | DashboardExpandBlocks Boolean
    | DashboardExpandTransactions Boolean
    | DashboardShowAPICode DashboardAPICode
    | NoOp
